Company started as a call center that receives bookings from calls. Once the executive
receives a call, he will need to dispatch a driver to the booking. If all drivers are occupied,
the executive needs to tell the customer. A new driver needs to be registered to the
system before he is available on the system. I want to create an automated booking
management system that allows the executive to dispatch drivers without human
intervention with the following features:

1. When a booking request comes in, I want to have a driver assigned to the booking
given a drive is available and return a booking_id in the response.
2. Distance information is needed on the booking creation.
3. A driver can only take a single booking at a time.
4. Once the driver completes the booking, they will notify the executive to make the
driver available in the pool.
5. The driver assignment is randomized.


We are particularly interested in understanding your craft and how you design your
solution. Your code enables us to know about your ability to code. So the key things
we are interested are:
● The final code should compile and run successfully.
● All corner cases should be handled.
● The code is modular with clear interfaces identified and coded.
● Proper use of abstractions and clean production ready code.
● Code can be extended for features addition.


Problem Extension
There are 2 parts of the extension:
1. As appreciation of the driver's hard work, I want to give some incentive when they
achieve certain conditions. I want the system to provide the ability to find out
drivers with:
● Booking completed >= 3
● Cumulative booking distance > 10 km
  $ drivers_completed_booking_gt 3
  Driver Completed
  driver-001 3
  $ booking_completed_distance_gt_10
  Driver Completed
  $ complete_booking booking-2
  Driver driver-002 is released to allocation pool
  $ booking_completed_distance_gt_10
  Driver Completed
  driver-002 10km
2. It should accept a filename as a parameter at the command prompt and read the
commands from that file
